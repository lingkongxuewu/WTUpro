C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CALIBRATION
OBJECT MODULE PLACED IN .\obj\Calibration.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\Calibration.c OPTIMIZE(SIZE) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PR
                    -INT(.\list\Calibration.lst) OBJECT(.\obj\Calibration.obj)

line level    source

   1          /*--------------------------------文*件*信*息-----------------------------
   2          * 文件名：  Calibration.c
   3          * 版　本：  v1.0
   4          * 描  述：  100T双轴 整合后的版本
   5          * 创建人：   
   6          * 日  期：   
   7          --------------------------------------------------------------------------
   8          *当前版本:      v1.0
   9          *修 改 人:
  10          *日　  期:
  11          ----------------------------------修改履历--------------------------------
  12          1、
  13          2、
  14          3、
  15          4、
  16          ------------------------------------------------------------------------*/
  17          #define __CALIBR_C__
  18          #include "_Include.h"
  19          //struct temp_calib xdata Temp_Xcal;    //X轴温度补偿
  20          //struct temp_calib xdata Temp_Ycal;    //Y轴温度补偿
  21          
  22          //struct ang_calib xdata Ang_Xcal;    //X轴角度校准
  23          //struct ang_calib xdata Ang_Ycal;    //Y轴角度校准
  24          
  25          static int16u xdata temp_buf[TEMP_CAL_NUM];    //21
  26          
  27          static float    Ang_RdXAVal(struct ang_calib *p_cal, int8u posid);
  28          
  29          //***********************************************************************/
  30          // *功    能：设置温度补偿点个数
  31          // *入    口：p_cal,temp_calib结构体指针(X,Y);num,点数
  32          // *出    口：
  33          // *备    注：
  34          // *函数性质：
  35          //***********************************************************************/
  36          static void Temp_SetCalCnt(struct temp_calib *p_cal, int8u num)
  37          {
  38   1          p_cal->calcnt=num;
  39   1      }
  40          //***********************************************************************/
  41          // *功    能：读温度校准模块中温度数组的某个元素
  42          // *入    口：p_cal,temp_calib结构体指针(X,Y);posid,位置ID号
  43          // *出    口：温度值
  44          // *备    注：保证位置ID在数组大小的范围内
  45          // *函数性质：
  46          //***********************************************************************/
  47          static int16u   Temp_RdTempVal(struct temp_calib *p_cal, int8u posid)
  48          {
  49   1          return (p_cal->ptempval[posid]);
  50   1      }
  51          
  52          //***********************************************************************/
  53          // *功    能：读温度校准模块中ADC数组的某个元素
  54          // *入    口：p_cal,temp_calib结构体指针(X,Y);posid,位置ID号
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 2   

  55          // *出    口：角度0时的ADC值
  56          // *备    注：保证位置ID在数组大小的范围内
  57          // *函数性质：
  58          //***********************************************************************/
  59          static int32s   Temp_RdAdcVal(struct temp_calib *p_cal, int8u posid)
  60          {
  61   1          return (p_cal->adcarr[posid]);
  62   1      }
  63          
  64          //***********************************************************************/
  65          // *功    能：设置温度校准模块中温度数组的某个元素
  66          // *入    口：p_cal,temp_calib结构体指针(X,Y);val,温度AD值;posid,位置ID号
  67          // *出    口：
  68          // *备    注：保证位置ID在数组大小的范围内
  69          // *函数性质：
  70          //***********************************************************************/
  71          static void Temp_WrTempVal(struct temp_calib *p_cal,int16u val, int8u posid)
  72          {
  73   1          p_cal->ptempval[posid]=val;
  74   1      }
  75          
  76          //***********************************************************************/
  77          // *功    能：设置温度校准模块中ADC数组的某个元素
  78          // *入    口：p_cal,temp_calib结构体指针(X,Y);val,写入的角度0时的AD值;posid,位置ID号
  79          // *出    口：
  80          // *备    注：保证位置ID在数组大小的范围内
  81          // *函数性质：
  82          //***********************************************************************/
  83          static void Temp_WrAdcVal(struct temp_calib *p_cal,int32s val, int8u posid)
  84          {
  85   1          p_cal->adcarr[posid]=val;
  86   1      }
  87          
  88          //***********************************************************************/
  89          // *功    能：0角度温度漂移A,K参数计算//
  90          // *入    口：p_cal,temp_calib结构体指针(X,Y);
  91          // *出    口：
  92          // *备    注：K=(ADC1-ADC0)/(TEMP1-TEMP0);A=ADC0-K*TEMP0;
  93          // *函数性质：在角度为0，以某一个温度为参考点的前提下，角度AD值随温度变化的关系来计算其中的ad值
  94          //***********************************************************************/
  95          static void Temp_CalcPrm(struct temp_calib *p_cal)
  96          {
  97   1          int8u xdata i;
  98   1          for(i=0;i<(p_cal->calcnt-1);i++)                                                    //计算所有的A,K值
  99   1          {
 100   2              p_cal->prm_k[i]=((float)(p_cal->adcarr[i+1]-p_cal->adcarr[i])/(float)(p_cal->ptempval[i+1]-p_cal->
             -ptempval[i]));
 101   2              p_cal->prm_a[i] = (float)(p_cal->adcarr[i])-p_cal->prm_k[i] * (p_cal->ptempval[i]);
 102   2          }
 103   1      }
 104          
 105          //***********************************************************************/
 106          // *功    能：设置角度标定点个数
 107          // *入    口：p_cal,ang_calib结构体指针(X,Y);num,点数
 108          // *出    口：
 109          // *备    注：
 110          // *函数性质：
 111          //***********************************************************************/
 112          static void Ang_SetCalCnt(struct ang_calib *p_cal, int8u num)
 113          {
 114   1          p_cal->calcnt=num;
 115   1      }
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 3   

 116          //***********************************************************************/
 117          // *功    能：读取角度标定模块中的角度值数组中的某个元素
 118          // *入    口：p_cal,ang_calib结构体指针(X,Y);posid,位置ID号
 119          // *出    口：角度值
 120          // *备    注：保证位置ID在数组大小的范围内
 121          // *函数性质：
 122          //***********************************************************************/
 123          static int32s   Ang_RdAngVal(struct ang_calib *p_cal, int8u posid)
 124          {
 125   1          return (p_cal->angarr[posid]);
 126   1      }
 127          
 128          //***********************************************************************/
 129          // *功    能：读取角度标定模块中的角度AD值数组中的某个元素
 130          // *入    口：p_cal,ang_calib结构体指针(X,Y);posid,位置ID号
 131          // *出    口：角度ADC值
 132          // *备    注：保证位置ID在数组大小的范围内
 133          // *函数性质：
 134          //***********************************************************************/
 135          static int32u   Ang_RdAdcVal(struct ang_calib *p_cal, int8u posid)
 136          {
 137   1          return (p_cal->adcarr[posid]);
 138   1      }
 139          //***********************************************************************/
 140          // *功    能：设置角度标定模块中的角度值数组中的某个元素
 141          // *入    口：p_cal,ang_calib结构体指针(X,Y);val,角度值;posid,位置ID号
 142          // *出    口：
 143          // *备    注：保证位置ID在数组大小的范围内
 144          // *函数性质：
 145          //***********************************************************************/
 146          static void Ang_WrAngVal(struct ang_calib *p_cal,int32s val, int8u posid)
 147          {
 148   1          p_cal->angarr[posid]=val;
 149   1      }
 150          
 151          //***********************************************************************/
 152          // *功    能：设置角度标定模块中的角度AD值数组中的某个元素
 153          // *入    口：p_cal,ang_calib结构体指针(X,Y);val,角度ADC值;posid,位置ID号
 154          // *出    口：
 155          // *备    注：保证位置ID在数组大小的范围内
 156          // *函数性质：
 157          //***********************************************************************/
 158          static void Ang_WrAdcVal(struct ang_calib *p_cal,int32u val, int8u posid)
 159          {
 160   1          p_cal->adcarr[posid]=val;
 161   1      }
 162          
 163          //***********************************************************************/
 164          // *功    能：角度A,K参数计算
 165          // *入    口：p_cal,ang_calib结构体指针(X,Y);
 166          // *出    口：
 167          // *备    注：K=(sin(ang1)-sin(ang0))/(adc1-adc0);A=sin(ang0)-K*adc0;
 168          // *函数性质：
 169          //***********************************************************************/
 170          static void Ang_CalcPrm(struct ang_calib *p_cal)
 171          {
 172   1          float xdata ang0;
 173   1          float xdata ang1;
 174   1      
 175   1          int8u xdata i;
 176   1          for(i=0;i<(p_cal->calcnt-1);i++)
 177   1          {
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 4   

 178   2              ang0=(PI*(p_cal->angarr[i]))/1800000.0;    //角度换算成弧度
 179   2              ang1=(PI*(p_cal->angarr[i+1]))/1800000.0;
 180   2              p_cal->prm_k[i] = (sin(ang1)-sin(ang0))/(int32s)(p_cal->adcarr[i+1]-p_cal->adcarr[i]);
 181   2              p_cal->prm_a[i] = sin(ang0)- p_cal->prm_k[i] * (p_cal->adcarr[i]);
 182   2          }
 183   1      }
 184          
 185          
 186          //***********************************************************************/
 187          // *功    能：获取X轴温度补偿点个数
 188          // *入    口：
 189          // *出    口：
 190          // *备    注：
 191          // *函数性质：
 192          //***********************************************************************/
 193          int8u GetTempXCalCnt(void)
 194          {
 195   1          return (Temp_Xcal.calcnt);    //获取X轴温度补偿点个数
 196   1      }
 197          
 198          int8u GetAngXCalCnt(void)
 199          {
 200   1          return (Ang_Xcal.calcnt);    //获取X轴角度校准点个数
 201   1      }
 202          /*
 203          int8u GetTempYCalCnt(void)
 204          {
 205              return (Temp_Ycal.calcnt);    //获取Y轴温度补偿点个数 (没有用到注释起来）
 206          }
 207          */
 208          int8u GetAngYCalCnt(void)
 209          {
 210   1          return (Ang_Ycal.calcnt);    //获取Y轴角度校准点个数
 211   1      }
 212          
 213          
 214          //***********************************************************************/
 215          // *功    能：
 216          // *入    口：
 217          // *出    口：
 218          // *备    注：
 219          // *函数性质：
 220          //***********************************************************************/
 221          void SetTempXCalCnt(int8u cnt)
 222          {
 223   1           Temp_SetCalCnt(&Temp_Xcal,cnt);    //设置X轴温度补偿点个数
 224   1      }
 225          
 226          void SetAngXCalCnt(int8u cnt)
 227          {
 228   1           Ang_SetCalCnt(&Ang_Xcal,cnt);     //设置X轴角度校准点个数
 229   1      }
 230          
 231          void SetTempYCalCnt(int8u cnt)
 232          {
 233   1           Temp_SetCalCnt(&Temp_Ycal,cnt);    //设置Y轴温度补偿点个数
 234   1      }
 235          
 236          void SetAngYCalCnt(int8u cnt)
 237          {
 238   1           Ang_SetCalCnt(&Ang_Ycal,cnt);    //设置Y轴角度校准点个数
 239   1      }
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 5   

 240          
 241          void SetTempCalCnt(int8u cnt)         //设置温度补偿点个数
 242          {
 243   1           SetTempXCalCnt(cnt);
 244   1           SetTempYCalCnt(cnt);
 245   1      }
 246          
 247          void SetAngCalCnt(int8u cnt)         //设置角度校准点个数
 248          {
 249   1           SetAngXCalCnt(cnt);
 250   1           SetAngYCalCnt(cnt);
 251   1      }
 252          
 253          
 254          
 255          //***********************************************************************/
 256          // *功    能：读温度校准模块中X轴温度数组的某个元素
 257          // *入    口：pos,数组中的位置
 258          // *出    口：温度AD值
 259          // *备    注：保证位置在数组的范围内    X,Y共用温度数组ptempval[]
 260          // *函数性质：
 261          //***********************************************************************/
 262          int16u GetTempXCalTempVal(int8u pos)
 263          {
 264   1          return (Temp_RdTempVal(&Temp_Xcal,pos));
 265   1      }
 266          //***********************************************************************/
 267          // *功    能：读取角度标定模块中的X轴角度值数组中的某个元素
 268          // *入    口：pos,数组中的位置
 269          // *出    口：角度值
 270          // *备    注：保证位置ID在数组大小的范围内
 271          //***********************************************************************/
 272          int32s GetAngXCalAngVal(int8u pos)
 273          {
 274   1          return (Ang_RdAngVal(&Ang_Xcal,pos));
 275   1      }
 276          //***********************************************************************/
 277          // *功    能：读温度校准模块中Y轴温度数组的某个元素
 278          // *入    口：pos,数组中的位置
 279          // *出    口：温度AD值
 280          // *备    注：保证位置在数组的范围内
 281          // *函数性质：
 282          //***********************************************************************/
 283          int16u GetTempYCalTempVal(int8u pos)
 284          {
 285   1          return (Temp_RdTempVal(&Temp_Ycal,pos));
 286   1      }
 287          //***********************************************************************/
 288          // *功    能：读取角度标定模块中的Y轴角度值数组中的某个元素
 289          // *入    口：pos,数组中的位置
 290          // *出    口：角度值
 291          // *备    注：保证位置ID在数组大小的范围内
 292          //***********************************************************************/
 293          int32s GetAngYCalAngVal(int8u pos)
 294          {
 295   1          return (Ang_RdAngVal(&Ang_Ycal,pos));
 296   1      }
 297          
 298          //***********************************************************************/
 299          // *功    能：读温度校准模块中X轴ADC数组的某个元素
 300          // *入    口：pos,数组中的位置
 301          // *出    口：角度0时的ADC值
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 6   

 302          // *备    注：保证位置在数组的范围内
 303          //***********************************************************************/
 304          int32u GetTempXCalAdcVal(int8u pos)
 305          {
 306   1          return (Temp_RdAdcVal(&Temp_Xcal,pos));
 307   1      }
 308          //***********************************************************************/
 309          // *功    能：读角度标定模块中X轴ADC数组的某个元素
 310          // *入    口：pos,数组中的位置
 311          // *出    口：角度ADC值
 312          // *备    注：保证位置在数组的范围内
 313          //***********************************************************************/
 314          int32u GetAngXCalAdcVal(int8u pos)
 315          {
 316   1          return (Ang_RdAdcVal(&Ang_Xcal,pos));
 317   1      }
 318          //***********************************************************************/
 319          // *功    能：读温度校准模块中Y轴ADC数组的某个元素
 320          // *入    口：pos,数组中的位置
 321          // *出    口：角度0时的ADC值
 322          // *备    注：保证位置在数组的范围内
 323          //***********************************************************************/
 324          int32u GetTempYCalAdcVal(int8u pos)
 325          {
 326   1          return (Temp_RdAdcVal(&Temp_Ycal,pos));
 327   1      }
 328          //***********************************************************************/
 329          // *功    能：读角度标定模块中Y轴ADC数组的某个元素
 330          // *入    口：pos,数组中的位置
 331          // *出    口：角度ADC值
 332          // *备    注：保证位置在数组的范围内
 333          //***********************************************************************/
 334          int32u GetAngYCalAdcVal(int8u pos)
 335          {
 336   1          return (Ang_RdAdcVal(&Ang_Ycal,pos));
 337   1      }
 338          //***********************************************************************/
 339          // *功    能：设置温度校准模块中X轴温度数组的某个元素
 340          // *入    口：val，温度AD值;pos,数组中的位置
 341          // *出    口：
 342          // *备    注：保证位置在数组的范围内
 343          //***********************************************************************/
 344          void SetTempXCalTempVal(int16u val, int8u pos)
 345          {
 346   1          Temp_WrTempVal(&Temp_Xcal,val,pos);
 347   1      }
 348          //***********************************************************************/
 349          // *功    能：设置角度标定模块中的X轴角度值数组中的某个元素
 350          // *入    口：val,角度值;pos,位置
 351          // *出    口：
 352          // *备    注：保证位置ID在数组大小的范围内
 353          //***********************************************************************/
 354          void SetAngXCalAngVal(int32s val, int8u pos)
 355          {
 356   1          Ang_WrAngVal(&Ang_Xcal,val,pos);
 357   1      }
 358          //***********************************************************************/
 359          // *功    能：设置温度校准模块中Y轴温度数组的某个元素
 360          // *入    口：val，温度AD值;pos,数组中的位置
 361          // *出    口：
 362          // *备    注：保证位置在数组的范围内
 363          //***********************************************************************/
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 7   

 364          void SetTempYCalTempVal(int32s val, int8u pos)
 365          {
 366   1          Temp_WrTempVal(&Temp_Ycal,val,pos);
 367   1      }
 368          //***********************************************************************/
 369          // *功    能：设置角度标定模块中的Y轴角度值数组中的某个元素
 370          // *入    口：val,角度值;pos,位置
 371          // *出    口：
 372          // *备    注：保证位置ID在数组大小的范围内
 373          //***********************************************************************/
 374          void SetAngYCalAngVal(int32s val, int8u pos)
 375          {
 376   1          Ang_WrAngVal(&Ang_Ycal,val,pos);
 377   1      }
 378          //***********************************************************************/
 379          // *功    能：设置温度校准模块中X轴ADC数组的某个元素
 380          // *入    口：val,写入的角度0时的AD值;pos,位置
 381          // *出    口：
 382          // *备    注：保证位置在数组的范围内
 383          //***********************************************************************/
 384          void SetTempXCalAdcVal(int32s val, int8u pos)                   //2013-6-9 03:21PM数据类型有修改int32s改为int32u
 385          {
 386   1          Temp_WrAdcVal(&Temp_Xcal,val,pos);
 387   1      }
 388          //***********************************************************************/
 389          // *功    能：设置角度标定模块中的X轴角度AD值数组中的某个元素
 390          // *入    口：val,角度ADC值;pos,位置
 391          // *出    口：
 392          // *备    注：保证位置在数组的范围内
 393          //***********************************************************************/
 394          void SetAngXCalAdcVal(int32u val, int8u pos)
 395          {
 396   1          Ang_WrAdcVal(&Ang_Xcal,val,pos);
 397   1      }
 398          //***********************************************************************/
 399          // *功    能：设置温度补偿模块中Y轴ADC数组的某个元素
 400          // *入    口：val,写入的角度0时的AD值;pos,位置
 401          // *出    口：
 402          // *备    注：保证位置在数组的范围内
 403          //***********************************************************************/
 404          void SetTempYCalAdcVal(int32u val, int8u pos)           //2013-6-9 03:21PM修改int32s改为int32u
 405          {
 406   1          Temp_WrAdcVal(&Temp_Ycal,val,pos);
 407   1      }
 408          //***********************************************************************/
 409          // *功    能：设置角度标定模块中的Y轴角度AD值数组中的某个元素
 410          // *入    口：val,角度ADC值;pos,位置
 411          // *出    口：
 412          // *备    注：保证位置在数组的范围内
 413          //***********************************************************************/
 414          void SetAngYCalAdcVal (int32u val, int8u pos)
 415          {
 416   1          Ang_WrAdcVal(&Ang_Ycal,val,pos);
 417   1      }
 418          //***********************************************************************/
 419          // *功    能：X轴温度补偿参数计算
 420          // *备    注：
 421          //***********************************************************************/
 422          void TempXCalcPrm (void)
 423          {
 424   1          Temp_CalcPrm(&Temp_Xcal);
 425   1      }
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 8   

 426          //***********************************************************************/
 427          // *功    能：Y轴温度补偿参数计算
 428          //***********************************************************************/
 429          void TempYCalcPrm (void)
 430          {
 431   1          Temp_CalcPrm(&Temp_Ycal);
 432   1      }
 433          //***********************************************************************/
 434          // *功    能：X轴角度标定参数计算
 435          // *备    注：
 436          //***********************************************************************/
 437          void AngXCalcPrm (void)
 438          {
 439   1          Ang_CalcPrm(&Ang_Xcal);
 440   1      }
 441          //***********************************************************************/
 442          // *功    能：Y轴角度标定参数计算
 443          // *备    注：
 444          //***********************************************************************/
 445          void AngYCalcPrm (void)
 446          {
 447   1          Ang_CalcPrm(&Ang_Ycal);
 448   1      }
 449          //***********************************************************************/
 450          // *功    能：温补默认数据初始化
 451          // *入    口：
 452          // *出    口：
 453          // *备    注：Flash 初始化的时候调用
 454          // *函数性质：
 455          //***********************************************************************/
 456          void TempCalDataInit()
 457          {
 458   1          int8u xdata i;
 459   1          SetTempCalCnt(3);          //设置温度补偿点个数
 460   1          for(i=0;i<TEMP_CAL_NUM;i++)//21
 461   1          {
 462   2              Temp_Xcal.ptempval[i] = 500*(i-TEMP_CAL_NUM/2)+8000; //MCU的温度
 463   2              Temp_Xcal.adcarr[i] = 0;
 464   2              Temp_Ycal.adcarr[i] = 0;
 465   2          }
 466   1      }
 467          //***********************************************************************/
 468          // *功    能：角度标定默认数据初始化
 469          // *入    口：
 470          // *出    口：
 471          // *备    注：Flash 初始化的时候调用
 472          // *函数性质：
 473          //***********************************************************************/
 474          void AngCalDataInit()
 475          {
 476   1          int8u xdata i;
 477   1          SetAngCalCnt(3);          //角度校准点个数
 478   1          for(i=0;i<ANG_CAL_NUM;i++)//角度
 479   1          {
 480   2              Ang_Xcal.angarr[i] = 20000*(i-ANG_CAL_NUM/2);
 481   2              Ang_Xcal.adcarr[i] = 60000*(i-ANG_CAL_NUM/2)+8000000;//2011-11-07 修改校准角度为4位小数
 482   2      
 483   2              Ang_Ycal.angarr[i] = 20000*(i-ANG_CAL_NUM/2);
 484   2              Ang_Ycal.adcarr[i] = 60000*(i-ANG_CAL_NUM/2)+800000;
 485   2          }
 486   1          //----------------test-------------------
 487   1          Ang_Xcal.angarr[0]  =   -300000  ;  Ang_Xcal.adcarr[0]  =   1537     ;//2011-11-07 修改校准角度为三位小
C51 COMPILER V9.01   CALIBRATION                                                           06/01/2018 17:39:14 PAGE 9   

             -数
 488   1          Ang_Xcal.angarr[1]  =   0       ;   Ang_Xcal.adcarr[1]  =   129028   ;
 489   1          Ang_Xcal.angarr[2]  =   300000   ;  Ang_Xcal.adcarr[2]  =   258353  ;
 490   1      
 491   1          Ang_Ycal.angarr[0]  =   -300000  ;  Ang_Ycal.adcarr[0]  =   1537     ;
 492   1          Ang_Ycal.angarr[1]  =   0       ;   Ang_Ycal.adcarr[1]  =   128200    ;
 493   1          Ang_Ycal.angarr[2]  =   300000   ;  Ang_Ycal.adcarr[2]  =   258353   ;
 494   1          //-------------test-------------------      
 495   1      }
 496          //***********************************************************************/
 497          // *功    能：校准模块初始化
 498          // *入    口：
 499          // *出    口：
 500          // *备    注：
 501          // *函数性质：初始化函数指针
 502          //***********************************************************************/
 503          void    CalibInit(void)
 504          {
 505   1          Temp_Xcal.ptempval=temp_buf;                //温度补偿模块中温度AD值缓存数组
 506   1          Temp_Xcal.SetCalNum=SetTempXCalCnt;         //设置校准个数  函数
 507   1          Temp_Xcal.RdTempVal=GetTempXCalTempVal;     //读设置数据
 508   1          Temp_Xcal.RdAdcVal=GetTempXCalAdcVal;       //读数据
 509   1          Temp_Xcal.WrTempVal=SetTempXCalTempVal;     //写数据
 510   1          Temp_Xcal.WrAdcVal=SetTempXCalAdcVal;       //写返回数据
 511   1      //  Temp_Xcal.CalcPrm=TempXCalcPrm;             //计算参数A,K
 512   1      
 513   1          Temp_Ycal.ptempval=temp_buf;                //温度补偿模块中温度AD值缓存数组
 514   1          Temp_Ycal.SetCalNum=SetTempYCalCnt;
 515   1          Temp_Ycal.RdTempVal=GetTempYCalTempVal;
 516   1          Temp_Ycal.RdAdcVal=GetTempYCalAdcVal;
 517   1          Temp_Ycal.WrTempVal=SetTempYCalTempVal;
 518   1          Temp_Ycal.WrAdcVal=SetTempYCalAdcVal;
 519   1      //  Temp_Ycal.CalcPrm=TempYCalcPrm;
 520   1      
 521   1          Ang_Xcal.SetCalNum=SetAngXCalCnt;
 522   1          Ang_Xcal.RdAngVal=GetAngXCalAngVal;
 523   1          Ang_Xcal.RdAdcVal=GetAngXCalAdcVal;
 524   1          Ang_Xcal.WrAngVal=SetAngXCalAngVal;
 525   1          Ang_Xcal.WrAdcVal=SetAngXCalAdcVal;
 526   1      //  Ang_Xcal.CalcPrm=AngXCalcPrm;
 527   1      
 528   1          Ang_Ycal.SetCalNum=SetAngYCalCnt;
 529   1          Ang_Ycal.RdAngVal=GetAngYCalAngVal;
 530   1          Ang_Ycal.RdAdcVal=GetAngYCalAdcVal;
 531   1          Ang_Ycal.WrAngVal=SetAngYCalAngVal;
 532   1          Ang_Ycal.WrAdcVal=SetAngYCalAdcVal;
 533   1      //  Ang_Ycal.CalcPrm=AngYCalcPrm;
 534   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1945    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1384      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      71
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
